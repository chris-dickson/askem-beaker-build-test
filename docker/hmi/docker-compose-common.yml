---
version: "3.9"

services:
  minio:
    image: quay.io/minio/minio:RELEASE.2023-11-15T20-43-25Z
    container_name: minio
    command: [ "server", "/data", "--console-address", ":9090" ]
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: "3s"
      timeout: "3s"
      retries: 30
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
      MINIO_BUCKET: askem-local-storage
    volumes:
      - minio-data:/data
    extra_hosts:
      - "host.docker.internal:host-gateway"

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.11.4
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--head",
          "0.0.0.0:9200/_cluster/health?wait_for_status=yellow"
        ]
      interval: "3s"
      timeout: "3s"
      retries: 30
    environment:
      - cluster.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx4096m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    extra_hosts:
      - "host.docker.internal:host-gateway"

  neo4j:
    container_name: neo4j
    image: neo4j:5.12-community
    healthcheck:
      test: wget http://127.0.0.1:7474 || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 3s
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_PLUGINS=["apoc"]
      - apoc.import.file.enabled=true
      - NEO4J_AUTH=none
      - NEO4J_dbms_memory_pagecache_size=512M
      - PG_HOST=postgres
      - PG_PORT=5432
    depends_on:
      - postgres
    extra_hosts:
      - "host.docker.internal:host-gateway"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5672:5672"
      - "15671:15671"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "terarium"
      RABBITMQ_DEFAULT_PASS: "terarium123"
      RABBITMQ_MANAGEMENT_ENABLED: "true"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  spicedb:
    container_name: spicedb
    image: authzed/spicedb:v1.28.0
    ports:
      - "50051:50051"
    command: [ "serve" ]
    environment:
      SPICEDB_GRPC_PRESHARED_KEY: "dev"
      SPICEDB_DATASTORE_ENGINE: "postgres"
      SPICEDB_HTTP_ENABLED: "true"
      SPICEDB_DATASTORE_CONN_URI: "postgres://terarium_user:terarium@postgres:5432/spicedb?sslmode=disable"
    healthcheck:
      test: [ "CMD", "grpc_health_probe", "-addr=:50051" ]
      interval: "3s"
      timeout: "3s"
      retries: 30
    depends_on:
      migrate-spicedb:
        condition: service_completed_successfully
    extra_hosts:
      - "host.docker.internal:host-gateway"

  migrate-spicedb:
    container_name: migrate-spicedb
    image: authzed/spicedb:v1.28.0
    command: [ "migrate", "head" ]
    restart: "on-failure"
    environment:
      SPICEDB_DATASTORE_ENGINE: "postgres"
      SPICEDB_DATASTORE_CONN_URI: "postgres://terarium_user:terarium@postgres:5432/spicedb?sslmode=disable"
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"

  postgres:
    container_name: postgres
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "terarium" ]
      interval: "3s"
      timeout: "3s"
      retries: 30
    user: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    volumes:
      - terarium-db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  elasticsearch-data:
  minio-data:
  terarium-db:
    driver: local
